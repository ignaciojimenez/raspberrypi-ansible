---
- name: Install liquidsoap and configure
  hosts: all
  vars:
    ls_folder: "liquidsoap"

  tasks:
    - name: Create FFmpeg preferences file to pin packages from Debian
      become: true
      ansible.builtin.copy:
        dest: "/etc/apt/preferences.d/ffmpeg.pref"
        content: |
          Package: ffmpeg libavcodec-dev libavcodec59 libavdevice59 libavfilter8 libavformat-dev libavformat59 libavutil-dev libavutil57 libpostproc56 libswresample-dev libswresample4 libswscale-dev libswscale6
          Pin: origin deb.debian.org
          Pin-Priority: 1001
        mode: '0644'

    - name: Update apt cache
      become: true
      ansible.builtin.apt:
        update_cache: true

    - name: Install FFmpeg dependencies
      become: true
      ansible.builtin.apt:
        name:
          - ffmpeg
          - libswresample4
          - libavdevice59
          - libavfilter8
          - libpostproc56
          - libavutil57
          - libswscale6
          - libavformat59
          - libavcodec59
        state: present
        allow_unauthenticated: true

    - name: Install Liquidsoap via apt
      become: true
      ansible.builtin.apt:
        name: liquidsoap
        update_cache: true
        state: present
        allow_unauthenticated: true

    - name: Create log file for liquidsoap
      vars:
        ls_log_folder: "/var/log/{{ ls_folder }}"
      block:
        - name: Create liquidosap log file fact to be reused
          ansible.builtin.set_fact:
            ls_log_file: "{{ ls_log_folder }}/{{ ls_name }}.log"
        - name: Ensures log_folder for liquidsoap exists
          become: true
          ansible.builtin.file:
            path: "{{ ls_log_folder }}"
            mode: '0777'
            # TODO check if this helps with anything
            # mode: '0666'
        - name: Creates the liquidsoap log file
          become: true
          ansible.builtin.file:
            path: "{{ ls_log_file }}"
            state: touch
            mode: '0777'
            # TODO check if this helps with anything
            # mode: '0666'

    - name: Create liquidsoap script file
      vars:
        ls_folder_path: "/home/{{ ansible_user_id }}/{{ ls_folder }}"
      block:
        - name: Set facts for liquidsoap script file
          ansible.builtin.set_fact:
            ls_script_path: "{{ ls_folder_path }}/{{ ls_name }}.liq"
        - name: Create the liquidsoap dir if it does not exist
          ansible.builtin.file:
            path: "{{ ls_folder_path }}"
            state: directory
            mode: '0755'
        - name: Create liquidsoap script based on a template
          ansible.builtin.template:
            src: "ls_script.j2"
            dest: "{{ ls_script_path }}"
            mode: a+x

    - name: Install liquidsoap unit file
      become: true
      ansible.builtin.template:
        src: "ls_unitfile.j2"
        dest: "/lib/systemd/system/{{ ls_name }}_liquidsoap.service"
        mode: "0644"

    - name: Reload systemd daemon
      become: true
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Enable liquidsoap service
      become: true
      ansible.builtin.systemd:
        name: "{{ ls_name }}_liquidsoap.service"
        enabled: true

    - name: Start liquidsoap service with retries to account for sleep delay
      become: true
      ansible.builtin.shell: systemctl start {{ ls_name }}_liquidsoap.service
      register: start_result
      retries: 3
      delay: 10
      until: start_result.rc == 0
      ignore_errors: true
      
    - name: Check if liquidsoap service is running
      become: true
      ansible.builtin.shell: systemctl is-active {{ ls_name }}_liquidsoap.service || echo "not running"
      register: service_status
      changed_when: false
      
    - name: Display service status
      ansible.builtin.debug:
        msg: "Liquidsoap service status: {{ service_status.stdout }}"
      when: service_status.stdout != "active"
