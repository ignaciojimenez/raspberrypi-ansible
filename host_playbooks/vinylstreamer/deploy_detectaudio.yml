- name: Install detect_audio.py service
  hosts: all
  vars:
    d_audio_path: "/home/{{ ansible_user_id }}/detectaudio"

  tasks:
    - name: Create detectaudio directory
      ansible.builtin.file:
        path: "{{ d_audio_path }}/"
        state: directory
        mode: '0755'

    - name: Copy detect_audio.py script
      ansible.builtin.copy:
        src: detect_audio.py
        dest: "{{ d_audio_path }}/"
        mode: a+x

    - name: Copy requirements.txt file
      ansible.builtin.copy:
        src: requirements.txt
        dest: "{{ d_audio_path }}/"
        mode: '0644'

    - name: Install required Python packages
      become: true
      ansible.builtin.apt:
        name:
          - python3-pip
          - python3-venv
          - python3-full
          - portaudio19-dev
        state: present

    - name: Create Python virtual environment
      ansible.builtin.command: python3 -m venv "{{ d_audio_path }}/venv"
      args:
        creates: "{{ d_audio_path }}/venv"

    - name: Install requirements in virtual environment
      ansible.builtin.pip:
        requirements: "{{ d_audio_path }}/requirements.txt"
        virtualenv: "{{ d_audio_path }}/venv"
        state: present

    - name: Check if virtual environment exists
      ansible.builtin.stat:
        path: "{{ d_audio_path }}/venv/bin/python3"
      register: venv_python_stat

    - name: Get the path to the Python interpreter in the virtual environment
      ansible.builtin.set_fact:
        venv_python_path: "{{ d_audio_path }}/venv/bin/python3"
      when: venv_python_stat.stat.exists

    - name: Debug Python interpreter path
      ansible.builtin.debug:
        msg: "Using Python interpreter at: {{ venv_python_path }}"
      when: venv_python_stat.stat.exists

    - name: Add shebang to detect_audio.py
      ansible.builtin.lineinfile:
        path: "{{ d_audio_path }}/detect_audio.py"
        line: "#!{{ venv_python_path }} -u"
        insertbefore: BOF
        backup: true
      when: venv_python_stat.stat.exists

    - name: Create systemd service
      become: true
      ansible.builtin.template:
        src: "detectaudio_unit.j2"
        dest: "/lib/systemd/system/detect_audio.service"
        mode: '0644'

    - name: Start service and reload
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
        name: detect_audio.service
        enabled: true
        state: started
